{"version":3,"sources":["resources/img/matthieu-roux-profile.jpg","resources/img/portfolio sync /^/.//.*/.jpg$","resources/img/portfolio/reading-glasses.jpg","resources/img/portfolio/spotme.jpg","resources/img/portfolio/studyQ.jpg","components/coverPicture/coverPicture.js","components/button/button.js","components/portfolioItem/portfolioItem.js","components/button/downloadButton.js","components/button/coverDownloadButton.js","components/button/coverButton.js","resources/theme/global.js","resources/theme/theme.js","resources/icons/themeToggleIcon.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CoverPicture","className","src","require","default","alt","Button","content","url","theme","href","target","rel","image","imgName","console","log","img","PortfolioItem","project","description","paragraph","push","button","title","DownloadButton","download","CoverDownloadButton","CoverButton","GlobalStyles","createGlobalStyle","body","background","header","mainColor","lightTheme","darkTheme","ThemeToggleIcon","xmlns","enableBackground","viewBox","fill","width","height","d","App","userPreferredTheme","window","matchMedia","matches","en","userPreferences","language","useState","preferences","setPreferences","bannerSection","togglePreferences","toggle","onClick","resumeButton","label","process","linkedInButton","emailButton","githubButton","createBannerSection","aboutMeSection","h1","createAboutMe","myProjectsSection","projects","intro","createMyProjectsSection","myResumeSection","createResumeSection","resumeSection","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.84ea9271.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/matthieu-roux-profile.9857130d.jpg\";","var map = {\n\t\"./reading-glasses.jpg\": 27,\n\t\"./spotme.jpg\": 28,\n\t\"./studyQ.jpg\": 29\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 26;","export default __webpack_public_path__ + \"static/media/reading-glasses.c284437c.jpg\";","export default __webpack_public_path__ + \"static/media/spotme.32da7c1a.jpg\";","export default __webpack_public_path__ + \"static/media/studyQ.85c479b4.jpg\";","import React from \"react\";\nimport \"./coverPicture.scss\";\n\nfunction CoverPicture() {\n  return (\n    <div className=\"image-container\">\n      <img\n        src={require(\"../../resources/img/matthieu-roux-profile.jpg\").default}\n        alt=\"a cool pic of me\"\n        className=\"coverPhoto\"\n      ></img>\n    </div>\n  );\n}\n\nexport default CoverPicture;\n","import React from \"react\";\n\nfunction Button(content, url, theme) {\n  return (\n    <div>\n      <a href={url}>\n        <div\n          className=\"project-card-button\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          {content}\n        </div>\n      </a>\n    </div>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\n\nimport Button from \"../button/button\";\nimport \"./portfolioItem.scss\";\n\nfunction PortfolioItem(project, theme) {\n  var description = [];\n  for (let paragraph of project.description) {\n    description.push(<p>{paragraph}</p>);\n  }\n  let img = <div></div>;\n  if (project.imgName) {\n    img = (\n      <div className=\"portfolio-image-container\">{image(project.imgName)}</div>\n    );\n  }\n\n  const button = project.url ? Button(\"View Code\", project.url) : <div></div>;\n\n  return (\n    <div className=\"project-card\">\n      <h2>{project.title}</h2>\n      <div className=\"portfolio-flex-row\">\n        {img}\n        <div className=\"porfolio-item-description\">\n          {description}\n          {button}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction image(imgName) {\n  console.log(imgName);\n  let img = require(\"../../resources/img/portfolio/\" +\n    imgName +\n    \".jpg\").default;\n  return <img src={img} alt=\"protfolio-img\" className=\"porfolioImg\"></img>;\n}\n\nexport default PortfolioItem;\n","import React from \"react\";\nimport \"./button.scss\";\n\nfunction DownloadButton(content, url) {\n  return (\n    <div>\n      <a href={url} download>\n        <div className=\"project-card-button\">{content}</div>\n      </a>\n    </div>\n  );\n}\n\nexport default DownloadButton;\n","import React from \"react\";\nimport \"./button.scss\";\n\nfunction CoverDownloadButton(content, url) {\n  return (\n    <div>\n      <a href={url} download>\n        <div className=\"project-card-cover-button\">{content}</div>\n      </a>\n    </div>\n  );\n}\n\nexport default CoverDownloadButton;\n","import React from \"react\";\n\nfunction CoverButton(content, url) {\n  return (\n    <div>\n      <a href={url}>\n        <div\n          className=\"project-card-cover-button\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          {content}\n        </div>\n      </a>\n    </div>\n  );\n}\n\nexport default CoverButton;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n\n  body {\n    align-items: center;\n    color: ${({ theme }) => theme.body};\n    background-color: ${({ theme }) => theme.background};\n  }\n  h1{\n    color: ${({ theme }) => theme.header};\n  }\n  .title {\n    color: ${({ theme }) => theme.title};\n  }\n\n  // Button themes\n\n  .project-card-button {\n    border: 2px solid ${({ theme }) => theme.body};\n    position: relative;\n    flex-wrap: wrap;\n\n    padding: 10px;\n    margin-right: 10px;\n    \n    display: inline-block;\n    text-align: center;\n    color: ${({ theme }) => theme.body};\n\n    border-radius: 2px;\n    &:hover {\n        border: 2px solid ${({ theme }) => theme.mainColor};\n        box-shadow: 0px 0px 10px 0.5px rgba(255, 130, 74, 0.54);\n    }\n  `;\n","// theme.js\nexport const lightTheme = {\n  mainColor: \"#FF824A\",\n  background: \"#FFFFFF\",\n  title: \"#FFFFFF\",\n  header: \"#2A373C\",\n  body: \"#2A373C\",\n};\n\nexport const darkTheme = {\n  mainColor: \"#FF824A\",\n  background: \"#000000\",\n  title: \"#FFFFFF\",\n  header: \"#FFFFFF\",\n  body: \"#F3F5F5\",\n};\n","import React from \"react\";\nimport { lightTheme, darkTheme } from \"../theme/theme\";\n\nfunction ThemeToggleIcon(theme) {\n  if (theme === \"light\") {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        enableBackground=\"new 0 0 24 24\"\n        viewBox=\"0 0 24 24\"\n        fill={lightTheme.mainColor}\n        width=\"36px\"\n        height=\"24px\"\n      >\n        <g>\n          <rect fill=\"none\" height=\"24\" width=\"24\" />\n        </g>\n        <g>\n          <g>\n            <path d=\"M12.34,2.02C6.59,1.82,2,6.42,2,12c0,5.52,4.48,10,10,10c3.71,0,6.93-2.02,8.66-5.02C13.15,16.73,8.57,8.55,12.34,2.02z\" />\n          </g>\n        </g>\n      </svg>\n    );\n  }\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill={darkTheme.mainColor}\n      width=\"36px\"\n      height=\"24px\"\n    >\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n      <path d=\"M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-10c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z\" />\n    </svg>\n  );\n}\n\nexport default ThemeToggleIcon;\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport { ThemeProvider } from \"styled-components\";\nimport CoverPicture from \"./components/coverPicture/coverPicture\";\nimport PortfolioItem from \"./components/portfolioItem/portfolioItem\";\nimport DownloadButton from \"./components/button/downloadButton\";\nimport CoverDownloadButton from \"./components/button/coverDownloadButton\";\nimport CoverButton from \"./components/button/coverButton\";\nimport { GlobalStyles } from \"./resources/theme/global\";\nimport { lightTheme, darkTheme } from \"./resources/theme/theme\";\nimport ThemeToggleIcon from \"./resources/icons/themeToggleIcon\";\n\nfunction App() {\n  var userPreferredTheme = \"light\";\n  var userPreferredLanguage = \"English\";\n\n  // Set the default theme based on the user's system theme\n  if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n    userPreferredTheme = \"dark\";\n  }\n\n  // Import languages\n  const en = require(\"./resources/lang/en.json\");\n\n  var userPreferences = {\n    theme: userPreferredTheme,\n    language: userPreferredLanguage,\n  };\n  // User Preferences\n  const [preferences, setPreferences] = useState(userPreferences);\n\n  // Set the content based on the proper language\n  var content = en;\n\n  // Function that updates preferences\n  const togglePreferences = () => {\n    // Toggle\n    if (preferences.theme === \"light\") {\n      setPreferences({ theme: \"dark\", language: preferences.language });\n      // otherwise, it should be light\n    } else {\n      setPreferences({ theme: \"dark\", language: preferences.language });\n    }\n  };\n\n  const bannerSection = createBannerSection(\n    content.bannerSection,\n    preferences.theme,\n    togglePreferences\n  );\n  const aboutMeSection = createAboutMe(content.aboutMeSection);\n  console.log(aboutMeSection);\n  const myProjectsSection = createMyProjectsSection(\n    content.myProjectsSection,\n    preferences.theme\n  );\n  const myResumeSection = createResumeSection(content.resumeSection);\n  return (\n    <div className=\"App\">\n      <ThemeProvider\n        theme={preferences.theme === \"light\" ? lightTheme : darkTheme}\n      >\n        <>\n          <GlobalStyles />\n\n          {bannerSection}\n          <div className=\"content\">\n            {myProjectsSection}\n            {myResumeSection}\n          </div>\n        </>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nfunction createBannerSection(content, theme, togglePreferences) {\n  const toggle = ThemeToggleIcon(theme);\n  return (\n    <div>\n      <div className=\"top-bar\">\n        <div className=\"theme-toggle\" onClick={togglePreferences}>\n          Use {theme === \"light\" ? \"Dark\" : \"Light\"} mode{toggle}\n        </div>\n      </div>\n      <div className=\"banner-wrapper\">{CoverPicture()}</div>\n\n      <div className=\"content\">\n        <div className=\"title-section\">\n          <header className=\"title\">\n            Matthieu <br /> Roux{\" \"}\n          </header>\n          <div className=\"cover-button-row\">\n            {CoverDownloadButton(\n              content.resumeButton.label,\n              process.env.PUBLIC_URL + content.resumeButton.url\n            )}\n            {CoverButton(\n              content.linkedInButton.label,\n              content.linkedInButton.url\n            )}\n            {CoverButton(content.emailButton.label, content.emailButton.url)}\n            {CoverButton(content.githubButton.label, content.githubButton.url)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction createAboutMe(content) {\n  return (\n    <div className=\"padded-div\">\n      <h1 className=\"h1\">{content.h1}</h1>\n      <p>{content.body}</p>\n    </div>\n  );\n}\n\nfunction createMyProjectsSection(content, theme) {\n  var projects = [];\n  const intro = content.intro;\n  for (let project of content.projects) {\n    projects.push(PortfolioItem(project, theme));\n  }\n  return (\n    <div className=\"padded-div\">\n      <h1 className=\"h1\">{content.h1}</h1>\n      <p>{intro}</p>\n      {projects}\n    </div>\n  );\n}\n\nfunction createResumeSection(content) {\n  return (\n    <div className=\"padded-div\">\n      <h1 className=\"h1\">{content.h1}</h1>\n      <p>{content.body}</p>\n      {DownloadButton(\n        content.button.label,\n        process.env.PUBLIC_URL + content.button.url\n      )}\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}